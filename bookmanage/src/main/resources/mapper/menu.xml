<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bookmanage.mapper.MenuMapper">
    <resultMap id="result" type="com.example.bookmanage.entity.menu">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="menu_name" jdbcType="VARCHAR" property="menu_name" />
        <result column="parent_id" jdbcType="INTEGER" property="parent_id" />
        <result column="path" jdbcType="VARCHAR" property="path" />
        <result column="perms" jdbcType="VARCHAR" property="perms" />
        <result column="type" jdbcType="VARCHAR" property="type" />
    </resultMap>

    <select id="findAllmenu" resultType="com.example.bookmanage.entity.menu">
        select  id,menu_name,parent_id,path,perms,type from menu
        <where>
            type ='M'
            <if test="menu_name!=null and menu_name!=''">
                and menu_name  like concat('%', #{menu_name}, '%')
            </if>
        </where>
    </select>

    <select id="findAllmenuPerm" resultType="com.example.bookmanage.entity.menu">
        select  id,menu_name,parent_id,path,perms,type from menu
        <where>
            type ='P'
            <if test="menu_name!=null and menu_name!=''">
                and menu_name  like concat('%', #{menu_name}, '%')
            </if>
        </where>
    </select>

    <select id="findMenuById" resultType="com.example.bookmanage.entity.menu">
        select  * from menu  where id=#{id};
    </select>

    <select id="findMenuByName" resultType="com.example.bookmanage.entity.menu">
        select * from menu where menu_name=#{menu_name};
    </select>

    <select id="findMenuByUserId" resultType="String">
        select  distinct a.perms from menu a, role_menu b,user_role c
                      where
                          c.role_id=b.role_id and
                          b.menu_id=a.id and
                          c.user_id=#{user_id} and
                          a.type='M';
    </select>

    <select id="findMenuPermByUserId" resultType="String">
        select  distinct a.perms from menu a, role_menu b,user_role c
         where
            c.role_id=b.role_id and b.menu_id=a.id and c.user_id=#{user_id} and a.type='P';
    </select>

    <insert id="insertMenu" parameterType="com.example.bookmanage.entity.menu" useGeneratedKeys="true" keyProperty="id">
        insert into menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="menu_name != null">menu_name,</if>
            <if test="parent_id != null">parent_id,</if>
            <if test="path != null">path,</if>
            <if test="perms != null">perms,</if>
            <if test="type != null">type,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="menu_name != null">#{menu_name},</if>
            <if test="parent_id != null">#{parent_id},</if>
            <if test="path != null">#{path},</if>
            <if test="perms != null">#{perms},</if>
            <if test="type != null">#{type},</if>
        </trim>
    </insert>

    <update id="updateMenu" parameterType="com.example.bookmanage.entity.menu">
        update menu
        <set >
            <if test="menu_name != null">
                menu_name=#{menu_name},
            </if>
            <if test="parent_id != null">
                parent_id=#{parent_id},
            </if>
            <if test="path != null">
                path=#{path},
            </if>
            <if test="perms != null">
                perms=#{perms},
            </if>
            <if test="type != null">
                type =#{type},
            </if>

        </set>
        where id=#{id};
    </update>

    <delete id="deleteMenuByid" parameterType="com.example.bookmanage.entity.menu">
        delete from menu where id=#{id};
    </delete>

</mapper>